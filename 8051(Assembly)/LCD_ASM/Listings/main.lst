C51 COMPILER V9.60.7.0   MAIN                                                              04/22/2025 23:51:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          // Define LCD control pins
   4          sbit rs = P2^0;
   5          sbit rw = P2^1;
   6          sbit en = P2^2;
   7          
   8          // Use P0 directly for LCD data (D4-D7)
   9          #define LCD_DATA P0
  10          
  11          // Function to provide delay (approx 1ms with 11.0592 MHz crystal)
  12          void delay(unsigned int count)
  13          {
  14   1          unsigned int i, j;
  15   1          for (i = 0; i < count; i++)
  16   1              for (j = 0; j < 112; j++);
  17   1      }
  18          
  19          // LCD16x2 command function
  20          void LCD_Command(unsigned char cmnd)
  21          {
  22   1          LCD_DATA = (LCD_DATA & 0x0F) | (cmnd & 0xF0); // Send upper nibble
  23   1          rs = 0;         // Command reg.
  24   1          rw = 0;         // Write operation
  25   1          en = 1;
  26   1          delay(1);
  27   1          en = 0;
  28   1          delay(2);
  29   1      
  30   1          LCD_DATA = (LCD_DATA & 0x0F) | (cmnd << 4); // Send lower nibble
  31   1          en = 1;         // Enable pulse
  32   1          delay(1);
  33   1          en = 0;
  34   1          delay(5);
  35   1      }
  36          
  37          // LCD data write function
  38          void LCD_Char(unsigned char char_data)
  39          {
  40   1          LCD_DATA = (LCD_DATA & 0x0F) | (char_data & 0xF0); // Send upper nibble
  41   1          rs = 1;         // Data reg.
  42   1          rw = 0;         // Write operation
  43   1          en = 1;
  44   1          delay(1);
  45   1          en = 0;
  46   1          delay(2);
  47   1      
  48   1          LCD_DATA = (LCD_DATA & 0x0F) | (char_data << 4); // Send lower nibble
  49   1          en = 1;         // Enable pulse
  50   1          delay(1);
  51   1          en = 0;
  52   1          delay(5);
  53   1      }
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              04/22/2025 23:51:20 PAGE 2   

  55          // Send string to LCD function
  56          void LCD_String(char *str)
  57          {
  58   1          int i;
  59   1          for (i = 0; str[i] != 0; i++) // Send each char of string till the NULL
  60   1          {
  61   2              LCD_Char(str[i]); // Call LCD data write
  62   2          }
  63   1      }
  64          
  65          // Send string to LCD function
  66          void LCD_String_xy(char row, char pos, char *str)
  67          {
  68   1          if (row == 0)
  69   1              LCD_Command((pos & 0x0F) | 0x80);
  70   1          else if (row == 1)
  71   1              LCD_Command((pos & 0x0F) | 0xC0);
  72   1          LCD_String(str);     // Call LCD string function
  73   1      }
  74          
  75          // LCD Initialize function
  76          void LCD_Init(void)
  77          {
  78   1          delay(20);      // LCD Power ON Initialization time >15ms
  79   1          LCD_Command(0x02); // 4bit mode
  80   1          LCD_Command(0x28); // Initialization of 16X2 LCD in 4bit mode
  81   1          LCD_Command(0x0C); // Display ON Cursor OFF
  82   1          LCD_Command(0x06); // Auto Increment cursor
  83   1          LCD_Command(0x01); // clear display
  84   1          LCD_Command(0x80); // cursor at home position
  85   1      }
  86          
  87          void main()
  88          {
  89   1          LCD_Init();     // Initialization of LCD
  90   1          LCD_String("Do Tri Manh"); // write string on 1st line of LCD
  91   1          LCD_Command(0xC0); // Go to 2nd line
  92   1          LCD_String_xy(1, 0, "Hello World"); // write string on 2nd line
  93   1          while (1);    // Infinite loop.
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
